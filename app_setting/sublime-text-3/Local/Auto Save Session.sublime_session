{
	"folder_history":
	[
		"/home/jyoo/bitbucket/ima-generator",
		"/home/jyoo/bitbucket/ima-generator/software/tnc",
		"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/console",
		"/home/jyoo/bitbucket/jupyter",
		"/home/jyoo/github/udacity/cpp",
		"/home/jyoo/github/udacity",
		"/home/jyoo/github/MC_SW",
		"/home/jyoo/github/manutest_mm",
		"/home/jyoo/others/pj_bitbucket",
		"/home/jyoo/bh_bitbucket/ima-generator",
		"/home/jyoo/bh_bitbucket/ima-generator/software/rtm",
		"/home/jyoo/bitbucket/ima-generator/software/rtm"
	],
	"last_version": 3211,
	"last_window_id": 59,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 1385.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"bubbleSensor",
						"bubbleSensorState"
					],
					[
						"bubbleSensorS",
						"bubbleSensorStateChanged"
					],
					[
						"rtmHeart",
						"rtmHeartBeat"
					],
					[
						"p",
						"p\tTag"
					],
					[
						"Nu",
						"NULL"
					],
					[
						"Ge",
						"GENERIC"
					],
					[
						"ISI",
						"ISI_PRINTF_ERROR"
					],
					[
						"RX",
						"RX_FAILED"
					],
					[
						"ISI_",
						"ISI_PRINTF_DEBUG"
					],
					[
						"NO",
						"NO_ERROR"
					],
					[
						"inval",
						"INVALID_INPUT"
					],
					[
						"GE",
						"GetError"
					],
					[
						"ISI_PRIN",
						"ISI_PRINTF_ERROR"
					],
					[
						"INVALID_",
						"INVALID_CONFIG"
					],
					[
						"conv",
						"conv"
					],
					[
						"setup",
						"ad9361_setup"
					],
					[
						"Confi",
						"CONFIG_FAILED"
					],
					[
						"INV",
						"INVALID_INPUT"
					],
					[
						"A",
						"AD9361"
					],
					[
						"get",
						"GetError"
					],
					[
						"INv",
						"INVALID_INPUT"
					],
					[
						"CON",
						"CONFIG_FAILED"
					],
					[
						"GET",
						"GetError"
					],
					[
						"Get",
						"GetError"
					],
					[
						"err",
						"IMA_Error_t"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"terminal",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"md",
						"Markdown Preview: Preview in Browser"
					],
					[
						"termi",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"Mark",
						"Markdown Preview: Preview in Browser"
					],
					[
						"mark",
						"Markdown Preview: Preview in Browser"
					],
					[
						"live",
						"LiveReload: Enable/disable plug-ins"
					],
					[
						"ter",
						"Terminus: Open Default Shell in Tab (View)"
					],
					[
						"terminus",
						"Terminus: Open Default Shell in Tab (View)"
					],
					[
						"pack",
						"Package Control: Install Package"
					],
					[
						"Package Control: remove",
						"Package Control: Remove Package"
					],
					[
						"termin",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"terminus: ",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"install pa",
						"Package Control: Install Package"
					],
					[
						"install package",
						"Package Control: Install Package"
					],
					[
						"git:status",
						"Git: Status"
					],
					[
						"SublimeGit",
						"Set Syntax: SublimeGit Status"
					],
					[
						"Install Package Control",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/console/console.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/console/console.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_status_helper.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/include/tncInterface.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/moc_qt_status_helper.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/mm/app/mmModbus/communicationHandler.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/computedDataFromMm.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/common/includes/tncInterfaceCommon.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/gui.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/main.qrc",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/EngineeringPanel.qml",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/main.qml",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/main_eng.qml",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/configuration/tncConfig.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/assets/icon_pressure_selected.svg",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/assets/icon_pressure_disabled.svg",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/assets/icon_pressure_normal.svg",
				"/home/jyoo/bitbucket/ima-generator/README.md",
				"/home/jyoo/.bashrc",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/proxyStub/rtmProxyStub.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/processedDataFromRtm.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/rtmAppStatusData.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/measuredDataFromRtm.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/logData.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/operatingData.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/modbusUploadRtmParams.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/report/csv.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/include/tncMessages.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/tools/convertBinToCsv/convertBinToCsv.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/api/api.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/status/status.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/include/tncInterfaceInputParser.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/tnc.pb.h",
				"/home/jyoo/bitbucket/ima-generator/.gitignore",
				"/home/jyoo/github/protobuf/cmake/libprotobuf.cmake",
				"/media/jyoo/YOO/tncConfig.inp",
				"/home/jyoo/Documents/tncConfig.inp",
				"/home/jyoo/Documents/temp.cpp",
				"/home/jyoo/bitbucket/ima-generator-tools/3rd-party/qt/README.md",
				"/home/jyoo/github/udacity/cpp/notes/references_and_pointers.md",
				"/home/jyoo/github/udacity/cpp/notes/data_structure.md",
				"/home/jyoo/github/udacity/cpp/notes/References and Pointers.md",
				"/home/jyoo/github/udacity/cpp/notes/build_system.md",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/test/rf_pwr_test.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_tx.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/dac_core.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_api.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_api.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_tx.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_rx.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_rx.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/adc_core.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/common_printf.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/ima_common.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/source/app.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/drv8711.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/ima_error.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_util.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_conv.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_util.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/source/platform.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/ima_assert.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/prototype/product/uCOS-II/sas/modbus/rtmModbusRtu.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/prototype/product/uCOS-II/sas/hala/rtmHalApi.cpp",
				"/home/jyoo/.config/sublime-text-3/Packages/User/SublimeGit.sublime-settings",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/drivers/spi.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/include/drv8711.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/source/ima_assert_impl.c",
				"/home/jyoo/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
				"/home/jyoo/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap"
			],
			"find":
			{
				"height": 39.0
			},
			"find_in_files":
			{
				"height": 116.0,
				"where_history":
				[
					"/home/jyoo/bitbucket/ima-generator/software/tnc/gui",
					"/home/jyoo/bitbucket/ima-generator/software/",
					"/home/jyoo/bitbucket/ima-generator/software/tnc/gui",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"m_pressure",
					"m_hpCurrent",
					"m_motorTemp",
					"m_rfBoardTemp",
					"m_circulatorTemp",
					"m_therapyRemainingTime",
					"m_shaft1Temp",
					"m_shaft2Temp",
					"shaft2Temp",
					"shaft1Temp",
					"processedShaft1TempInDc_",
					"TncInterfaceComputedDataFromMm",
					"pressure",
					"therapyRemainingTime",
					"circulatorTemp",
					"rfBoardTemp",
					"hpCurrent",
					"motorTemp",
					"reflectedPower",
					"flowRate",
					"m_flowRate",
					"m_reflectedPower",
					"m_forwardPower",
					"forwardPower",
					"flowRate",
					"TncInterfaceConfiguration",
					"TncInterfaceGlobalMwConfig",
					"startAblation"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"m_processedCoolantPressureInPsi_",
					"m_processedHighPwrAmpCurrentInMa_",
					"m_motorDrvrTemp__dC_",
					"m_processedRfBrdAmpTempInDc_",
					"m_processedCirculatorTempInDc_",
					"m_remainingTherapyTime__dsec_",
					"m_processedShaft1TempInDc_",
					"m_processedShaft2TempInDc_",
					"processedShaft2TempInDc_",
					"processedShaft1TempInDc_",
					"processedCoolantPressureInPsi_",
					"remainingTherapyTime__dsec_",
					"processedCirculatorTempInDc_",
					"processedRfBrdAmpTempInDc_",
					"processedHighPwrAmpCurrentInMa_",
					"motorDrvrTemp__dC_",
					"m_flowRate__uL_p_min_",
					"m_refPwr__mW_",
					"m_fwdPwr__mW_",
					"fwdPwr__mW_"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": true,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 26.0
			},
			"input":
			{
				"height": 38.0
			},
			"menu_visible": true,
			"output.SublimeLinter":
			{
				"height": 0.0
			},
			"output.Terminus":
			{
				"height": 173.0
			},
			"output.Terminus 2":
			{
				"height": 306.0
			},
			"output.exec":
			{
				"height": 132.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.unsaved_changes":
			{
				"height": 132.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 48.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"gui/qt_status_helper.cpp"
					],
					[
						"qt",
						"gui/qt_status_helper.cpp"
					],
					[
						"drv8711",
						"components/include/drv8711.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 362.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1687.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"bubbleSensor",
						"bubbleSensorState"
					],
					[
						"bubbleSensorS",
						"bubbleSensorStateChanged"
					],
					[
						"rtmHeart",
						"rtmHeartBeat"
					],
					[
						"p",
						"p\tTag"
					],
					[
						"Nu",
						"NULL"
					],
					[
						"Ge",
						"GENERIC"
					],
					[
						"ISI",
						"ISI_PRINTF_ERROR"
					],
					[
						"RX",
						"RX_FAILED"
					],
					[
						"ISI_",
						"ISI_PRINTF_DEBUG"
					],
					[
						"NO",
						"NO_ERROR"
					],
					[
						"inval",
						"INVALID_INPUT"
					],
					[
						"GE",
						"GetError"
					],
					[
						"ISI_PRIN",
						"ISI_PRINTF_ERROR"
					],
					[
						"INVALID_",
						"INVALID_CONFIG"
					],
					[
						"conv",
						"conv"
					],
					[
						"setup",
						"ad9361_setup"
					],
					[
						"Confi",
						"CONFIG_FAILED"
					],
					[
						"INV",
						"INVALID_INPUT"
					],
					[
						"A",
						"AD9361"
					],
					[
						"get",
						"GetError"
					],
					[
						"INv",
						"INVALID_INPUT"
					],
					[
						"CON",
						"CONFIG_FAILED"
					],
					[
						"GET",
						"GetError"
					],
					[
						"Get",
						"GetError"
					],
					[
						"err",
						"IMA_Error_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_status_helper.cpp",
					"settings":
					{
						"buffer_size": 8357,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "#include \"qt_command_helper.h\"\n#include <QDebug>\n\nQtCommandHelper::QtCommandHelper(QObject *parent) : QObject(parent)\n{\n\n    commandClient_ = new TncInterface();\n    if (NULL == commandClient_)\n    {\n        printf(\"No memory for commandClient\\n\");\n        exit(-1);\n    }\n}\n\nvoid QtCommandHelper::setFlowRate(int flowRate__uL_p_min_)\n{\n    qDebug() << \"Flow Rate Set: \" << flowRate__uL_p_min_;\n\n    // TODO\n//    qtServer->SendUserInputParameter(USER_INPUT_PARAM_FLOW_RATE, flowRate__uL_p_min_);\n}\n\nvoid QtCommandHelper::setForwardPower(int fwdPwr__mW_)\n{\n    qDebug() << \"Forward power set: \" << fwdPwr__mW_;\n\n    // TODO\n//    qtServer->SendUserInputParameter(USER_INPUT_PARAM_FORWARD_POWER, fwdPwr__mW_);\n}\n\nvoid QtCommandHelper::setReflectedPower(int refPwr__mW_)\n{\n    qDebug() << \"Reflected power set: \" << refPwr__mW_;\n\n    // TODO\n//    qtServer->SendUserInputParameter(USER_INPUT_PARAM_REFLECTED_POWER_LIMIT, refPwr__mW_);\n}\n\nvoid QtCommandHelper::setTherapyTime(int therapyTime)\n{\n    qDebug() << \"Therapy Time set: \" << therapyTime << \" seconds\";\n\n    // TODO\n//    qtServer->SendUserInputParameter(USER_INPUT_PARAM_THERAPY_TIME, therapyTime);\n}\n\nvoid QtCommandHelper::startAblation()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_MW_START\";\n\n    TncInterfaceStartAblationRequest request;\n    TncInterfaceStartAblationReply reply;\n    bool parameterValid = true;\n\n    // TncInterfaceConfiguration *tncConfig;\n    // configuration = commandClient_->GetConfiguration();\n\n    // TncInterfaceGlobalMwConfig *mwConfig = &(tncConfig->toleranceConfig_.globalMw_);\n\n    // //! Clear all variables in request\n    // ::memset((void *)&request, 0, sizeof(TncInterfaceStartAblationRequest));\n    // TncInterfaceStartAblationParams *startAblationParams = &request.startAblationParams_;\n\n    // startAblationParams->therapyTimeInDsec_ = mwConfig->therapyTimeInDsec_.default_;\n    // if (NULL != parameters)\n    // {\n    //     if (0 != *parameters)\n    //     {\n    //         uint16_t time__sec, time__dsec;\n    //         parameters = DataParse::ParseToken(parameters,\n    //                 &time__sec);\n    //         time__dsec = 10*time__sec;\n    //         startAblationParams->therapyTimeInDsec_ =\n    //             static_cast<uint32_t>(time__dsec);\n\n    //         if ((mwConfig->therapyTimeInDsec_.minimum_ > time__dsec)\n    //             || ( mwConfig->therapyTimeInDsec_.maximum_ < time__dsec))\n    //         {\n    //             // therapy time must be in [1s, 600s]\n    //             parameterValid = false;\n    //         }\n    //     }\n    // }\n\n    //             startAblationParams->targetFwdPwrInMdbm_ =\n    //                 (::log10(mwConfig->targetFwdPwrInW_.default_)*10.0 + 30.0)*1000.0;\n    //             if (NULL != parameters)\n    //             {\n    //                 if (0 != *parameters)\n    //                 {\n    //                     uint8_t fwdPwr__W;\n    //                     parameters = DataParse::ParseToken(parameters,\n    //                             &fwdPwr__W);\n\n    //                     // Convert Watts to milli dbm\n    //                     startAblationParams->targetFwdPwrInMdbm_ =\n    //                         (::log10(fwdPwr__W)*10.0 + 30.0)*1000.0;\n\n    //                     if ((mwConfig->targetFwdPwrInW_.minimum_ > fwdPwr__W)\n    //                         || (mwConfig->targetFwdPwrInW_.maximum_ < fwdPwr__W)\n    //                         || (0 != (fwdPwr__W % mwConfig->targetFwdPwrInW_.step_)))\n    //                     {\n    //                         // Outside of bounds or not in required step size\n    //                         parameterValid = false;\n    //                     }\n    //                 }\n    //             }\n    //             else\n    //             {\n    //                 parameterValid = false;\n    //             }\n\n    //             startAblationParams->targetFwdPwrUpperLimInMdbm_ = 0;\n    //             if (NULL != parameters)\n    //             {\n    //                 if (0 != *parameters)\n    //                 {\n    //                     parameters = DataParse::ParseToken(parameters,\n    //                             &startAblationParams->\n    //                                 targetFwdPwrUpperLimInMdbm_);\n    //                 }\n    //             }\n\n    //             startAblationParams->targetFwdPwrLowerLimInMdbm_ = 0;\n    //             if (NULL != parameters)\n    //             {\n    //                 if (0 != *parameters)\n    //                 {\n    //                     parameters = DataParse::ParseToken(parameters,\n    //                             &startAblationParams->\n    //                                 targetFwdPwrLowerLimInMdbm_);\n    //                 }\n    //             }\n\n    //             startAblationParams->rflPwrUpperLimInMdbm_ = 0;\n    //             if (NULL != parameters)\n    //             {\n    //                 if (0 != *parameters)\n    //                 {\n    //                     parameters = DataParse::ParseToken(parameters,\n    //                             &startAblationParams->rflPwrUpperLimInMdbm_);\n    //                 }\n    //             }\n\n    //             startAblationParams->soundLevelInMdba_ = 0;\n    //             if (NULL != parameters)\n    //             {\n    //                 if (0 != *parameters)\n    //                 {\n    //                     parameters = DataParse::ParseToken(parameters,\n    //                             &startAblationParams->soundLevelInMdba_);\n    //                 }\n    //             }\n\n    //             request.timeoutInSeconds_ = TNC_INTERFACE_WAIT_UNTIL_COMPLETE;\n    //             if (NULL != parameters)\n    //             {\n    //                 if (0 != *parameters)\n    //                 {\n    //                     parameters = DataParse::ParseToken(parameters,\n    //                                    &request.timeoutInSeconds_);\n    //                 }\n    //             }\n\n    //             request.requestType_ = TNC_INTERFACE_NEW_REQUEST;\n    //             if (NULL != parameters)\n    //             {\n    //                 if (0 != *parameters)\n    //                 {\n    //                     uint32_t value;\n    //                     parameters = DataParse::ParseToken(parameters,\n    //                                &value);\n    //                     request.requestType_ =\n    //                         static_cast<TNC_INTERFACE_REQUEST_TYPE>(value);\n    //                 }\n    //             }\n\n    //             requestTime = PlatformTimer::SecondsPastEpoch();\n    //             if (true == parameterValid)\n    //             {\n    //                 ret = consoleClient_->StartAblation(request, reply);\n    //             }\n    //             else\n    //             {\n    //                 ret = TNC_INTERFACE_FAIL;\n    //                 reply.response_ = TNC_INTERFACE_INVALID_REQUEST_ERROR;\n    //                 reply.reason_ = TNC_INTERFACE_REASON_START_ABLATION_API;\n    //             }\n    //             replyTime = PlatformTimer::SecondsPastEpoch();\n    //             response = reply.response_;\n    //             if (TNC_INTERFACE_ACCEPTED == ret)\n    //             {\n    //                 if (TNC_INTERFACE_NO_ERROR == response)\n    //                 {\n    //                     display += ::sprintf(display, \"\\n Success!\");\n    //                 }\n    //                 else\n    //                 {\n    //                     display += ::sprintf(display, \"\\n Error:%d\", response);\n    //                 }\n    //             }\n    //             else\n    //             {\n    //                 display += ::sprintf(display, \"\\n Fail?\");\n    //             }\n    //             display += ::sprintf(display,\n    //                        \"\\n  Roundtrip Took %.3f seconds\",\n    //                        (replyTime - requestTime));\n    //             display += ::sprintf(display, \"\\nRequest:\");\n    //             display = report_.Text(&request, display);\n    //             display += ::sprintf(display, \"\\nReply:\");\n    //             display = report_.Text(&reply, display);\n    //         }\n    //         break;\n\n}\n\nvoid QtCommandHelper::stopAblation()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_MW_STOP\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_MW_STOP);\n}\n\nvoid QtCommandHelper::startProbeTest()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_START_PROBE_TEST\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_START_PROBE_TEST);\n}\n\nvoid QtCommandHelper::setPumpOn()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_PUMP_ON \";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_PUMP_ON);\n}\n\nvoid QtCommandHelper::setPumpOff()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_PUMP_OFF\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_PUMP_OFF);\n}\n\nvoid QtCommandHelper::setLeakDetected()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_LEAK_DETECTED\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_LEAK_DETECTED);\n}\n\nvoid QtCommandHelper::setNoLeakConfirmed()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_NO_LEAK_CONFIRMED\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_NO_LEAK_CONFIRMED);\n}\n\nvoid QtCommandHelper::setSystemErrorClass4Ack()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_SYSTEM_ERROR_CLASS4_ACK\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_SYSTEM_ERROR_CLASS4_ACK);\n}\n\nvoid QtCommandHelper::setSystemErrorClass1Ack()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_SYSTEM_ERROR_CLASS1_ACK\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_SYSTEM_ERROR_CLASS1_ACK);\n}\n\nvoid QtCommandHelper::setEnterEngineeringMode()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_ENTER_ENGINEERING_MODE\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_ENTER_ENGINEERING_MODE);\n}\n\nvoid QtCommandHelper::sendClass1Ack()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_SYSTEM_ERROR_CLASS1_ACK\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_SYSTEM_ERROR_CLASS1_ACK);\n}\n\nvoid QtCommandHelper::sendClass4Ack()\n{\n    qDebug() << \"Sent User Input Event: USER_INPUT_SYSTEM_ERROR_CLASS4_ACK\";\n\n    // TODO\n//    qtServer->SendUserInputEvent(USER_INPUT_SYSTEM_ERROR_CLASS4_ACK);\n}\n",
					"file": "/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.cpp",
					"file_size": 10303,
					"file_write_time": 132624630635918596,
					"settings":
					{
						"buffer_size": 10294,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.h",
					"settings":
					{
						"buffer_size": 1051,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"terminal",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"md",
						"Markdown Preview: Preview in Browser"
					],
					[
						"termi",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"Mark",
						"Markdown Preview: Preview in Browser"
					],
					[
						"mark",
						"Markdown Preview: Preview in Browser"
					],
					[
						"live",
						"LiveReload: Enable/disable plug-ins"
					],
					[
						"ter",
						"Terminus: Open Default Shell in Tab (View)"
					],
					[
						"terminus",
						"Terminus: Open Default Shell in Tab (View)"
					],
					[
						"pack",
						"Package Control: Install Package"
					],
					[
						"Package Control: remove",
						"Package Control: Remove Package"
					],
					[
						"termin",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"terminus: ",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"install pa",
						"Package Control: Install Package"
					],
					[
						"install package",
						"Package Control: Install Package"
					],
					[
						"git:status",
						"Git: Status"
					],
					[
						"SublimeGit",
						"Set Syntax: SublimeGit Status"
					],
					[
						"Install Package Control",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/jyoo/bitbucket/ima-generator/software/tnc",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml"
			],
			"file_history":
			[
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/console/console.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/console/console.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_status_helper.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/include/tncInterface.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/moc_qt_status_helper.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/mm/app/mmModbus/communicationHandler.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/computedDataFromMm.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/common/includes/tncInterfaceCommon.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/gui.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/main.qrc",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/EngineeringPanel.qml",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/main.qml",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/main_eng.qml",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/configuration/tncConfig.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/assets/icon_pressure_selected.svg",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/assets/icon_pressure_disabled.svg",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/assets/icon_pressure_normal.svg",
				"/home/jyoo/bitbucket/ima-generator/README.md",
				"/home/jyoo/.bashrc",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/proxyStub/rtmProxyStub.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/processedDataFromRtm.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/rtmAppStatusData.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/measuredDataFromRtm.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/logData.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/operatingData.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/modbusUploadRtmParams.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/report/csv.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/include/tncMessages.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/tools/convertBinToCsv/convertBinToCsv.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/api/api.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/status/status.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/include/tncInterfaceInputParser.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/tnc.pb.h",
				"/home/jyoo/bitbucket/ima-generator/.gitignore",
				"/home/jyoo/github/protobuf/cmake/libprotobuf.cmake",
				"/media/jyoo/YOO/tncConfig.inp",
				"/home/jyoo/Documents/tncConfig.inp",
				"/home/jyoo/Documents/temp.cpp",
				"/home/jyoo/bitbucket/ima-generator-tools/3rd-party/qt/README.md",
				"/home/jyoo/github/udacity/cpp/notes/references_and_pointers.md",
				"/home/jyoo/github/udacity/cpp/notes/data_structure.md",
				"/home/jyoo/github/udacity/cpp/notes/References and Pointers.md",
				"/home/jyoo/github/udacity/cpp/notes/build_system.md",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/test/rf_pwr_test.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_tx.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/dac_core.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_api.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_api.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_tx.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_rx.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_rx.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/adc_core.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/common_printf.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/ima_common.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/source/app.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/drv8711.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/ima_error.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_util.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_conv.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_util.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/source/platform.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/ima_assert.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/prototype/product/uCOS-II/sas/modbus/rtmModbusRtu.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/prototype/product/uCOS-II/sas/hala/rtmHalApi.cpp",
				"/home/jyoo/.config/sublime-text-3/Packages/User/SublimeGit.sublime-settings",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/drivers/spi.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/include/drv8711.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/source/ima_assert_impl.c",
				"/home/jyoo/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
				"/home/jyoo/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap"
			],
			"find":
			{
				"height": 39.0
			},
			"find_in_files":
			{
				"height": 116.0,
				"where_history":
				[
					"/home/jyoo/bitbucket/ima-generator/software/tnc/gui",
					"/home/jyoo/bitbucket/ima-generator/software/",
					"/home/jyoo/bitbucket/ima-generator/software/tnc/gui",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"m_pressure",
					"m_hpCurrent",
					"m_motorTemp",
					"m_rfBoardTemp",
					"m_circulatorTemp",
					"m_therapyRemainingTime",
					"m_shaft1Temp",
					"m_shaft2Temp",
					"shaft2Temp",
					"shaft1Temp",
					"processedShaft1TempInDc_",
					"TncInterfaceComputedDataFromMm",
					"pressure",
					"therapyRemainingTime",
					"circulatorTemp",
					"rfBoardTemp",
					"hpCurrent",
					"motorTemp",
					"reflectedPower",
					"flowRate",
					"m_flowRate",
					"m_reflectedPower",
					"m_forwardPower",
					"forwardPower",
					"flowRate",
					"TncInterfaceConfiguration",
					"TncInterfaceGlobalMwConfig",
					"startAblation"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"m_processedCoolantPressureInPsi_",
					"m_processedHighPwrAmpCurrentInMa_",
					"m_motorDrvrTemp__dC_",
					"m_processedRfBrdAmpTempInDc_",
					"m_processedCirculatorTempInDc_",
					"m_remainingTherapyTime__dsec_",
					"m_processedShaft1TempInDc_",
					"m_processedShaft2TempInDc_",
					"processedShaft2TempInDc_",
					"processedShaft1TempInDc_",
					"processedCoolantPressureInPsi_",
					"remainingTherapyTime__dsec_",
					"processedCirculatorTempInDc_",
					"processedRfBrdAmpTempInDc_",
					"processedHighPwrAmpCurrentInMa_",
					"motorDrvrTemp__dC_",
					"m_flowRate__uL_p_min_",
					"m_refPwr__mW_",
					"m_fwdPwr__mW_",
					"fwdPwr__mW_"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": true,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/jyoo/bitbucket/ima-generator/software/tnc"
				}
			],
			"groups":
			[
				{
					"selected": 2,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_status_helper.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8357,
								"regions":
								{
								},
								"selection":
								[
									[
										4472,
										4472
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1224.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 10294,
								"regions":
								{
								},
								"selection":
								[
									[
										1382,
										1382
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 306.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1051,
								"regions":
								{
								},
								"selection":
								[
									[
										558,
										558
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 26.0
			},
			"input":
			{
				"height": 38.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.SublimeLinter":
			{
				"height": 0.0
			},
			"output.Terminus":
			{
				"height": 173.0
			},
			"output.Terminus 2":
			{
				"height": 306.0
			},
			"output.exec":
			{
				"height": 132.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.unsaved_changes":
			{
				"height": 132.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,67,27,1754,1412,5360,1440",
			"project": "",
			"replace":
			{
				"height": 48.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"gui/qt_status_helper.cpp"
					],
					[
						"qt",
						"gui/qt_status_helper.cpp"
					],
					[
						"drv8711",
						"components/include/drv8711.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 362.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 52,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"bubbleSensor",
						"bubbleSensorState"
					],
					[
						"bubbleSensorS",
						"bubbleSensorStateChanged"
					],
					[
						"rtmHeart",
						"rtmHeartBeat"
					],
					[
						"p",
						"p\tTag"
					],
					[
						"Nu",
						"NULL"
					],
					[
						"Ge",
						"GENERIC"
					],
					[
						"ISI",
						"ISI_PRINTF_ERROR"
					],
					[
						"RX",
						"RX_FAILED"
					],
					[
						"ISI_",
						"ISI_PRINTF_DEBUG"
					],
					[
						"NO",
						"NO_ERROR"
					],
					[
						"inval",
						"INVALID_INPUT"
					],
					[
						"GE",
						"GetError"
					],
					[
						"ISI_PRIN",
						"ISI_PRINTF_ERROR"
					],
					[
						"INVALID_",
						"INVALID_CONFIG"
					],
					[
						"conv",
						"conv"
					],
					[
						"setup",
						"ad9361_setup"
					],
					[
						"Confi",
						"CONFIG_FAILED"
					],
					[
						"INV",
						"INVALID_INPUT"
					],
					[
						"A",
						"AD9361"
					],
					[
						"get",
						"GetError"
					],
					[
						"INv",
						"INVALID_INPUT"
					],
					[
						"CON",
						"CONFIG_FAILED"
					],
					[
						"GET",
						"GetError"
					],
					[
						"Get",
						"GetError"
					],
					[
						"err",
						"IMA_Error_t"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "[\n\t{ \"keys\": [\"ctrl+q\"], \"command\": \"exit\" },\n\n\t{ \"keys\": [\"ctrl+shift+n\"], \"command\": \"new_window\" },\n\t{ \"keys\": [\"ctrl+shift+w\"], \"command\": \"close_window\" },\n\t{ \"keys\": [\"ctrl+o\"], \"command\": \"prompt_open_file\" },\n\t{ \"keys\": [\"ctrl+shift+t\"], \"command\": \"reopen_last_file\" },\n\t{ \"keys\": [\"alt+o\"], \"command\": \"switch_file\", \"args\": {\"extensions\": [\"cpp\", \"cxx\", \"cc\", \"c\", \"hpp\", \"hxx\", \"hh\", \"h\", \"ipp\", \"inl\", \"m\", \"mm\"]} },\n\t{ \"keys\": [\"ctrl+n\"], \"command\": \"new_file\" },\n\t{ \"keys\": [\"ctrl+s\"], \"command\": \"save\" },\n\t{ \"keys\": [\"ctrl+shift+s\"], \"command\": \"prompt_save_as\" },\n\t{ \"keys\": [\"ctrl+f4\"], \"command\": \"close_file\" },\n\t{ \"keys\": [\"ctrl+w\"], \"command\": \"close\" },\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+b\"], \"command\": \"toggle_side_bar\" },\n\t{ \"keys\": [\"f11\"], \"command\": \"toggle_full_screen\" },\n\t{ \"keys\": [\"shift+f11\"], \"command\": \"toggle_distraction_free\" },\n\n\t{ \"keys\": [\"backspace\"], \"command\": \"left_delete\" },\n\t{ \"keys\": [\"shift+backspace\"], \"command\": \"left_delete\" },\n\t{ \"keys\": [\"ctrl+shift+backspace\"], \"command\": \"left_delete\" },\n\t{ \"keys\": [\"delete\"], \"command\": \"right_delete\" },\n\t{ \"keys\": [\"enter\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\n\"} },\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\n\"} },\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\n\"} },\n\t{ \"keys\": [\"shift+keypad_enter\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\n\"} },\n\n\t{ \"keys\": [\"ctrl+z\"], \"command\": \"undo\" },\n\t{ \"keys\": [\"ctrl+shift+z\"], \"command\": \"redo\" },\n\t{ \"keys\": [\"ctrl+y\"], \"command\": \"redo_or_repeat\" },\n\t{ \"keys\": [\"ctrl+u\"], \"command\": \"soft_undo\" },\n\t{ \"keys\": [\"ctrl+shift+u\"], \"command\": \"soft_redo\" },\n\n\t{ \"keys\": [\"shift+delete\"], \"command\": \"cut\" },\n\t{ \"keys\": [\"ctrl+insert\"], \"command\": \"copy\" },\n\t{ \"keys\": [\"shift+insert\"], \"command\": \"paste\" },\n\n\t// These two key bindings should replace the above three if you'd prefer\n\t// the traditional X11 behavior of shift+insert pasting from the primary\n\t// selection. The above CUA keys are the default, to match most GTK\n\t// applications.\n\t//{ \"keys\": [\"shift+insert\"], \"command\": \"paste\", \"args\": {\"clipboard\": \"selection\"} },\n\t//{ \"keys\": [\"shift+delete\"], \"command\": \"right_delete\" },\n\n\t{ \"keys\": [\"ctrl+x\"], \"command\": \"cut\" },\n\t{ \"keys\": [\"ctrl+c\"], \"command\": \"copy\" },\n\t{ \"keys\": [\"ctrl+v\"], \"command\": \"paste\" },\n\t{ \"keys\": [\"ctrl+shift+v\"], \"command\": \"paste_and_indent\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+v\"], \"command\": \"paste_from_history\" },\n\n\t{ \"keys\": [\"left\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": false} },\n\t{ \"keys\": [\"right\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true} },\n\t{ \"keys\": [\"up\"], \"command\": \"move\", \"args\": {\"by\": \"lines\", \"forward\": false} },\n\t{ \"keys\": [\"down\"], \"command\": \"move\", \"args\": {\"by\": \"lines\", \"forward\": true} },\n\t{ \"keys\": [\"shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true, \"extend\": true} },\n\t{ \"keys\": [\"shift+up\"], \"command\": \"move\", \"args\": {\"by\": \"lines\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"shift+down\"], \"command\": \"move\", \"args\": {\"by\": \"lines\", \"forward\": true, \"extend\": true} },\n\n\t{ \"keys\": [\"ctrl+left\"], \"command\": \"move\", \"args\": {\"by\": \"words\", \"forward\": false} },\n\t{ \"keys\": [\"ctrl+right\"], \"command\": \"move\", \"args\": {\"by\": \"word_ends\", \"forward\": true} },\n\t{ \"keys\": [\"ctrl+shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"words\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"ctrl+shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"word_ends\", \"forward\": true, \"extend\": true} },\n\n\t{ \"keys\": [\"alt+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false} },\n\t{ \"keys\": [\"alt+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true} },\n\t{ \"keys\": [\"alt+shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"alt+shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true, \"extend\": true} },\n\n\t{ \"keys\": [\"alt+shift+up\"], \"command\": \"select_lines\", \"args\": {\"forward\": false} },\n\t{ \"keys\": [\"alt+shift+down\"], \"command\": \"select_lines\", \"args\": {\"forward\": true} },\n\n\t{ \"keys\": [\"pageup\"], \"command\": \"move\", \"args\": {\"by\": \"pages\", \"forward\": false} },\n\t{ \"keys\": [\"pagedown\"], \"command\": \"move\", \"args\": {\"by\": \"pages\", \"forward\": true} },\n\t{ \"keys\": [\"shift+pageup\"], \"command\": \"move\", \"args\": {\"by\": \"pages\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"shift+pagedown\"], \"command\": \"move\", \"args\": {\"by\": \"pages\", \"forward\": true, \"extend\": true} },\n\n\t{ \"keys\": [\"home\"], \"command\": \"move_to\", \"args\": {\"to\": \"bol\", \"extend\": false} },\n\t{ \"keys\": [\"end\"], \"command\": \"move_to\", \"args\": {\"to\": \"eol\", \"extend\": false} },\n\t{ \"keys\": [\"shift+home\"], \"command\": \"move_to\", \"args\": {\"to\": \"bol\", \"extend\": true} },\n\t{ \"keys\": [\"shift+end\"], \"command\": \"move_to\", \"args\": {\"to\": \"eol\", \"extend\": true} },\n\t{ \"keys\": [\"ctrl+home\"], \"command\": \"move_to\", \"args\": {\"to\": \"bof\", \"extend\": false} },\n\t{ \"keys\": [\"ctrl+end\"], \"command\": \"move_to\", \"args\": {\"to\": \"eof\", \"extend\": false} },\n\t{ \"keys\": [\"ctrl+shift+home\"], \"command\": \"move_to\", \"args\": {\"to\": \"bof\", \"extend\": true} },\n\t{ \"keys\": [\"ctrl+shift+end\"], \"command\": \"move_to\", \"args\": {\"to\": \"eof\", \"extend\": true} },\n\n\t{ \"keys\": [\"ctrl+up\"], \"command\": \"scroll_lines\", \"args\": {\"amount\": 1.0 } },\n\t{ \"keys\": [\"ctrl+down\"], \"command\": \"scroll_lines\", \"args\": {\"amount\": -1.0 } },\n\n\t{ \"keys\": [\"ctrl+pagedown\"], \"command\": \"next_view\" },\n\t{ \"keys\": [\"ctrl+pageup\"], \"command\": \"prev_view\" },\n\n\t{ \"keys\": [\"ctrl+tab\"], \"command\": \"next_view_in_stack\" },\n\t{ \"keys\": [\"ctrl+shift+tab\"], \"command\": \"prev_view_in_stack\" },\n\n\t{ \"keys\": [\"ctrl+a\"], \"command\": \"select_all\" },\n\t{ \"keys\": [\"ctrl+shift+l\"], \"command\": \"split_selection_into_lines\" },\n\t{ \"keys\": [\"escape\"], \"command\": \"single_selection\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"num_selections\", \"operator\": \"not_equal\", \"operand\": 1 }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"clear_fields\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"clear_fields\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"hide_panel\", \"args\": {\"cancel\": true},\n\t\t\"context\":\n\t\t[\n\t\t\t{ \"key\": \"panel_visible\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"hide_overlay\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"hide_popup\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"popup_visible\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"hide_auto_complete\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"tab\"], \"command\": \"insert_best_completion\", \"args\": {\"default\": \"\\t\", \"exact\": true} },\n\t{ \"keys\": [\"tab\"], \"command\": \"insert_best_completion\", \"args\": {\"default\": \"\\t\", \"exact\": false},\n\t\t\"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_match\", \"operand\": \".*\\\\b[0-9]+$\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"replace_completion_with_next_completion\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"last_command\", \"operator\": \"equal\", \"operand\": \"insert_best_completion\" },\n\t\t\t{ \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"reindent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"indent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"text\", \"operator\": \"regex_contains\", \"operand\": \"\\n\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"next_field\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"commit_completion\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"auto_complete_visible\" },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\t\"} },\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.shift_tab_unindent\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\t ]*\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"text\", \"operator\": \"regex_contains\", \"operand\": \"\\n\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"prev_field\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"ctrl+]\"], \"command\": \"indent\" },\n\t{ \"keys\": [\"ctrl+[\"], \"command\": \"unindent\" },\n\n\t{ \"keys\": [\"insert\"], \"command\": \"toggle_overwrite\" },\n\n\t{ \"keys\": [\"ctrl+l\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"line\"} },\n\t{ \"keys\": [\"ctrl+d\"], \"command\": \"find_under_expand\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+d\"], \"command\": \"find_under_expand_skip\" },\n\t{ \"keys\": [\"ctrl+shift+space\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"scope\"} },\n\t{ \"keys\": [\"ctrl+shift+m\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"brackets\"} },\n\t{ \"keys\": [\"ctrl+m\"], \"command\": \"move_to\", \"args\": {\"to\": \"brackets\"} },\n\t{ \"keys\": [\"ctrl+shift+j\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"indentation\"} },\n\t{ \"keys\": [\"ctrl+shift+a\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"tag\"} },\n\n\t{ \"keys\": [\"alt+.\"], \"command\": \"close_tag\" },\n\n\t{ \"keys\": [\"ctrl+alt+q\"], \"command\": \"toggle_record_macro\" },\n\t{ \"keys\": [\"ctrl+alt+shift+q\"], \"command\": \"run_macro\" },\n\n\t{ \"keys\": [\"ctrl+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Add Line.sublime-macro\"} },\n\t{ \"keys\": [\"ctrl+shift+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Add Line Before.sublime-macro\"} },\n\t{ \"keys\": [\"enter\"], \"command\": \"commit_completion\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"auto_complete_visible\" },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\", \"operand\": false }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"ctrl+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"show_files\": true} },\n\t{ \"keys\": [\"ctrl+shift+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\"} },\n\t{ \"keys\": [\"ctrl+alt+p\"], \"command\": \"prompt_select_workspace\" },\n\t{ \"keys\": [\"ctrl+r\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \"@\"} },\n\t{ \"keys\": [\"ctrl+g\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \":\"} },\n\t{ \"keys\": [\"ctrl+;\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \"#\"} },\n\t{ \"keys\": [\"f12\"], \"command\": \"goto_definition\" },\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"goto_reference\" },\n\t{ \"keys\": [\"ctrl+shift+r\"], \"command\": \"goto_symbol_in_project\" },\n\t{ \"keys\": [\"alt+-\"], \"command\": \"jump_back\" },\n\t{ \"keys\": [\"alt+shift+-\"], \"command\": \"jump_forward\" },\n\t{ \"keys\": [\"alt+keypad_minus\"], \"command\": \"jump_back\" },\n\t{ \"keys\": [\"alt+shift+keypad_minus\"], \"command\": \"jump_forward\" },\n\n\t{ \"keys\": [\"ctrl+i\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"incremental_find\", \"reverse\": false} },\n\t{ \"keys\": [\"ctrl+shift+i\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"incremental_find\", \"reverse\": true} },\n\t{ \"keys\": [\"ctrl+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"find\", \"reverse\": false} },\n\t{ \"keys\": [\"ctrl+h\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"replace\", \"reverse\": false} },\n\t{ \"keys\": [\"ctrl+shift+h\"], \"command\": \"replace_next\" },\n\t{ \"keys\": [\"f3\"], \"command\": \"find_next\" },\n\t{ \"keys\": [\"shift+f3\"], \"command\": \"find_prev\" },\n\t{ \"keys\": [\"ctrl+f3\"], \"command\": \"find_under\" },\n\t{ \"keys\": [\"ctrl+shift+f3\"], \"command\": \"find_under_prev\" },\n\t{ \"keys\": [\"alt+f3\"], \"command\": \"find_all_under\" },\n\t{ \"keys\": [\"ctrl+e\"], \"command\": \"slurp_find_string\" },\n\t{ \"keys\": [\"ctrl+shift+e\"], \"command\": \"slurp_replace_string\" },\n\t{ \"keys\": [\"ctrl+shift+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"find_in_files\"} },\n\t{ \"keys\": [\"f4\"], \"command\": \"next_result\" },\n\t{ \"keys\": [\"shift+f4\"], \"command\": \"prev_result\" },\n\n\t{ \"keys\": [\"ctrl+.\"], \"command\": \"next_modification\" },\n\t{ \"keys\": [\"ctrl+,\"], \"command\": \"prev_modification\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+z\"], \"command\": \"revert_modification\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+/\"], \"command\": \"toggle_inline_diff\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+;\"], \"command\": \"toggle_inline_diff\", \"args\": { \"prefer_hide\": true } },\n\n\t{ \"keys\": [\"f6\"], \"command\": \"toggle_setting\", \"args\": {\"setting\": \"spell_check\"} },\n\t{ \"keys\": [\"ctrl+f6\"], \"command\": \"next_misspelling\" },\n\t{ \"keys\": [\"ctrl+shift+f6\"], \"command\": \"prev_misspelling\" },\n\n\t{ \"keys\": [\"ctrl+shift+up\"], \"command\": \"swap_line_up\" },\n\t{ \"keys\": [\"ctrl+shift+down\"], \"command\": \"swap_line_down\" },\n\n\t{ \"keys\": [\"ctrl+backspace\"], \"command\": \"delete_word\", \"args\": { \"forward\": false } },\n\t{ \"keys\": [\"ctrl+shift+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete to Hard BOL.sublime-macro\"} },\n\n\t{ \"keys\": [\"ctrl+delete\"], \"command\": \"delete_word\", \"args\": { \"forward\": true } },\n\t{ \"keys\": [\"ctrl+shift+delete\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n\n\t{ \"keys\": [\"ctrl+/\"], \"command\": \"toggle_comment\", \"args\": { \"block\": false } },\n\t{ \"keys\": [\"ctrl+shift+/\"], \"command\": \"toggle_comment\", \"args\": { \"block\": true } },\n\n\t{ \"keys\": [\"ctrl+j\"], \"command\": \"join_lines\" },\n\t{ \"keys\": [\"ctrl+shift+d\"], \"command\": \"duplicate_line\" },\n\n\t{ \"keys\": [\"ctrl+`\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"console\", \"toggle\": true} },\n\n\t{ \"keys\": [\"alt+/\"], \"command\": \"auto_complete\" },\n\t{ \"keys\": [\"alt+/\"], \"command\": \"replace_completion_with_auto_complete\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"last_command\", \"operator\": \"equal\", \"operand\": \"insert_best_completion\" },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"ctrl+alt+shift+p\"], \"command\": \"show_scope_name\" },\n\n\t{ \"keys\": [\"f7\"], \"command\": \"build\" },\n\t{ \"keys\": [\"ctrl+b\"], \"command\": \"build\" },\n\t{ \"keys\": [\"ctrl+shift+b\"], \"command\": \"build\", \"args\": {\"select\": true} },\n\t{ \"keys\": [\"ctrl+break\"], \"command\": \"cancel_build\" },\n\n\t{ \"keys\": [\"ctrl+t\"], \"command\": \"transpose\" },\n\n\t{ \"keys\": [\"f9\"], \"command\": \"sort_lines\", \"args\": {\"case_sensitive\": false} },\n\t{ \"keys\": [\"ctrl+f9\"], \"command\": \"sort_lines\", \"args\": {\"case_sensitive\": true} },\n\n\t// Auto-pair quotes\n\t{ \"keys\": [\"\\\"\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\\"$0\\\"\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|>|$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"[\\\"a-zA-Z0-9_]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.double - punctuation.definition.string.end\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"\\\"\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\\"${0:$SELECTION}\\\"\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"\\\"\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\"\", \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"not_equal\", \"operand\": \"punctuation.definition.string.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.double - punctuation.definition.string.end\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\"$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\"\", \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"not_equal\", \"operand\": \"punctuation.definition.string.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.double - punctuation.definition.string.end\", \"match_all\": true },\n\t\t]\n\t},\n\n\t// Auto-pair single quotes\n\t{ \"keys\": [\"'\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"'$0'\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|>|$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single - punctuation.definition.string.end\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"'\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"'${0:$SELECTION}'\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"'\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^'\", \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"not_equal\", \"operand\": \"punctuation.definition.string.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single - punctuation.definition.string.end\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"'$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^'\", \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"not_equal\", \"operand\": \"punctuation.definition.string.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single - punctuation.definition.string.end\", \"match_all\": true },\n\t\t]\n\t},\n\n\t// Auto-pair brackets\n\t{ \"keys\": [\"(\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"($0)\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|;|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"(\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"(${0:$SELECTION})\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\")\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\($\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\)\", \"match_all\": true }\n\t\t]\n\t},\n\n\t// Auto-pair square brackets\n\t{ \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[$0]\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|;|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[${0:$SELECTION}]\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"]\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\]\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\[$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\]\", \"match_all\": true }\n\t\t]\n\t},\n\n\t// Auto-pair curly brackets\n\t{ \"keys\": [\"{\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"{$0}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"{\"], \"command\": \"wrap_block\", \"args\": {\"begin\": \"{\", \"end\": \"}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"indented_block\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"{\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"{${0:$SELECTION}}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"}\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Add Line in Braces.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Add Line in Braces.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"enter\"], \"command\": \"auto_indent_tag\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"punctuation.definition.tag.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \">$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^</\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"auto_indent_tag\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"punctuation.definition.tag.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \">$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^</\", \"match_all\": true },\n\t\t]\n\t},\n\n\t{\n\t\t\"keys\": [\"alt+shift+1\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 1.0],\n\t\t\t\"rows\": [0.0, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+2\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 0.5, 1.0],\n\t\t\t\"rows\": [0.0, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [1, 0, 2, 1]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+3\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 0.33, 0.66, 1.0],\n\t\t\t\"rows\": [0.0, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+4\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 0.25, 0.5, 0.75, 1.0],\n\t\t\t\"rows\": [0.0, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1], [3, 0, 4, 1]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+8\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 1.0],\n\t\t\t\"rows\": [0.0, 0.5, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [0, 1, 1, 2]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+9\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 1.0],\n\t\t\t\"rows\": [0.0, 0.33, 0.66, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+5\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 0.5, 1.0],\n\t\t\t\"rows\": [0.0, 0.5, 1.0],\n\t\t\t\"cells\":\n\t\t\t[\n\t\t\t\t[0, 0, 1, 1], [1, 0, 2, 1],\n\t\t\t\t[0, 1, 1, 2], [1, 1, 2, 2]\n\t\t\t]\n\t\t}\n\t},\n\t{ \"keys\": [\"ctrl+1\"], \"command\": \"focus_group\", \"args\": { \"group\": 0 } },\n\t{ \"keys\": [\"ctrl+2\"], \"command\": \"focus_group\", \"args\": { \"group\": 1 } },\n\t{ \"keys\": [\"ctrl+3\"], \"command\": \"focus_group\", \"args\": { \"group\": 2 } },\n\t{ \"keys\": [\"ctrl+4\"], \"command\": \"focus_group\", \"args\": { \"group\": 3 } },\n\t{ \"keys\": [\"ctrl+5\"], \"command\": \"focus_group\", \"args\": { \"group\": 4 } },\n\t{ \"keys\": [\"ctrl+6\"], \"command\": \"focus_group\", \"args\": { \"group\": 5 } },\n\t{ \"keys\": [\"ctrl+7\"], \"command\": \"focus_group\", \"args\": { \"group\": 6 } },\n\t{ \"keys\": [\"ctrl+8\"], \"command\": \"focus_group\", \"args\": { \"group\": 7 } },\n\t{ \"keys\": [\"ctrl+9\"], \"command\": \"focus_group\", \"args\": { \"group\": 8 } },\n\t{ \"keys\": [\"ctrl+shift+1\"], \"command\": \"move_to_group\", \"args\": { \"group\": 0 } },\n\t{ \"keys\": [\"ctrl+shift+2\"], \"command\": \"move_to_group\", \"args\": { \"group\": 1 } },\n\t{ \"keys\": [\"ctrl+shift+3\"], \"command\": \"move_to_group\", \"args\": { \"group\": 2 } },\n\t{ \"keys\": [\"ctrl+shift+4\"], \"command\": \"move_to_group\", \"args\": { \"group\": 3 } },\n\t{ \"keys\": [\"ctrl+shift+5\"], \"command\": \"move_to_group\", \"args\": { \"group\": 4 } },\n\t{ \"keys\": [\"ctrl+shift+6\"], \"command\": \"move_to_group\", \"args\": { \"group\": 5 } },\n\t{ \"keys\": [\"ctrl+shift+7\"], \"command\": \"move_to_group\", \"args\": { \"group\": 6 } },\n\t{ \"keys\": [\"ctrl+shift+8\"], \"command\": \"move_to_group\", \"args\": { \"group\": 7 } },\n\t{ \"keys\": [\"ctrl+shift+9\"], \"command\": \"move_to_group\", \"args\": { \"group\": 8 } },\n\t{ \"keys\": [\"ctrl+0\"], \"command\": \"focus_side_bar\" },\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+up\"], \"command\": \"new_pane\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+shift+up\"], \"command\": \"new_pane\", \"args\": {\"move\": false} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+down\"], \"command\": \"close_pane\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+left\"], \"command\": \"focus_neighboring_group\", \"args\": {\"forward\": false} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+right\"], \"command\": \"focus_neighboring_group\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+shift+left\"], \"command\": \"move_to_neighboring_group\", \"args\": {\"forward\": false} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+shift+right\"], \"command\": \"move_to_neighboring_group\" },\n\n\t{ \"keys\": [\"alt+1\"], \"command\": \"select_by_index\", \"args\": { \"index\": 0 } },\n\t{ \"keys\": [\"alt+2\"], \"command\": \"select_by_index\", \"args\": { \"index\": 1 } },\n\t{ \"keys\": [\"alt+3\"], \"command\": \"select_by_index\", \"args\": { \"index\": 2 } },\n\t{ \"keys\": [\"alt+4\"], \"command\": \"select_by_index\", \"args\": { \"index\": 3 } },\n\t{ \"keys\": [\"alt+5\"], \"command\": \"select_by_index\", \"args\": { \"index\": 4 } },\n\t{ \"keys\": [\"alt+6\"], \"command\": \"select_by_index\", \"args\": { \"index\": 5 } },\n\t{ \"keys\": [\"alt+7\"], \"command\": \"select_by_index\", \"args\": { \"index\": 6 } },\n\t{ \"keys\": [\"alt+8\"], \"command\": \"select_by_index\", \"args\": { \"index\": 7 } },\n\t{ \"keys\": [\"alt+9\"], \"command\": \"select_by_index\", \"args\": { \"index\": 8 } },\n\t{ \"keys\": [\"alt+0\"], \"command\": \"select_by_index\", \"args\": { \"index\": 9 } },\n\n\t{ \"keys\": [\"f2\"], \"command\": \"next_bookmark\" },\n\t{ \"keys\": [\"shift+f2\"], \"command\": \"prev_bookmark\" },\n\t{ \"keys\": [\"ctrl+f2\"], \"command\": \"toggle_bookmark\" },\n\t{ \"keys\": [\"ctrl+shift+f2\"], \"command\": \"clear_bookmarks\" },\n\t{ \"keys\": [\"alt+f2\"], \"command\": \"select_all_bookmarks\" },\n\n\t{ \"keys\": [\"ctrl+shift+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Line.sublime-macro\"} },\n\n\t{ \"keys\": [\"alt+q\"], \"command\": \"wrap_lines\" },\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+u\"], \"command\": \"upper_case\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+l\"], \"command\": \"lower_case\" },\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+space\"], \"command\": \"set_mark\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+a\"], \"command\": \"select_to_mark\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+w\"], \"command\": \"delete_to_mark\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+x\"], \"command\": \"swap_with_mark\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+y\"], \"command\": \"yank\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete to Hard BOL.sublime-macro\"} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+g\"], \"command\": \"clear_bookmarks\", \"args\": {\"name\": \"mark\"} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+c\"], \"command\": \"show_at_center\" },\n\n\t{ \"keys\": [\"ctrl++\"], \"command\": \"increase_font_size\" },\n\t{ \"keys\": [\"ctrl+=\"], \"command\": \"increase_font_size\" },\n\t{ \"keys\": [\"ctrl+-\"], \"command\": \"decrease_font_size\" },\n\n\t{ \"keys\": [\"alt+shift+w\"], \"command\": \"insert_snippet\", \"args\": { \"name\": \"Packages/XML/Snippets/long-tag.sublime-snippet\" } },\n\n\t{ \"keys\": [\"ctrl+shift+[\"], \"command\": \"fold\" },\n\t{ \"keys\": [\"ctrl+shift+]\"], \"command\": \"unfold\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+1\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 1} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+2\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 2} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+3\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 3} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+4\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 4} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+5\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 5} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+6\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 6} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+7\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 7} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+8\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 8} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+9\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 9} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+0\"], \"command\": \"unfold_all\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+j\"], \"command\": \"unfold_all\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+t\"], \"command\": \"fold_tag_attributes\" },\n\n\t{ \"keys\": [\"context_menu\"], \"command\": \"context_menu\" },\n\n\t{ \"keys\": [\"alt+c\"], \"command\": \"toggle_case_sensitive\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+r\"], \"command\": \"toggle_regex\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+w\"], \"command\": \"toggle_whole_word\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+a\"], \"command\": \"toggle_preserve_case\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t// Find panel key bindings\n\t{ \"keys\": [\"enter\"], \"command\": \"find_next\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n\t\t \"context\": [{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\n\t// Replace panel key bindings\n\t{ \"keys\": [\"enter\"], \"command\": \"find_next\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n\t\t\"context\": [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"ctrl+alt+enter\"], \"command\": \"replace_all\", \"args\": {\"close_panel\": true},\n\t\t \"context\": [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\n\t// Incremental find panel key bindings\n\t{ \"keys\": [\"enter\"], \"command\": \"hide_panel\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n\t\t\"context\": [{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\n\t// Find in Files panel key bindings\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"find_all\",\n\t\t \"context\": [{\"key\": \"panel\", \"operand\": \"find_in_files\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"ctrl+alt+enter\"], \"command\": \"replace_all\",\n\t\t \"context\": [{\"key\": \"panel\", \"operand\": \"find_in_files\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\n\t// HTML, XML close tag\n\t{ \"keys\": [\"/\"], \"command\": \"close_tag\", \"args\": { \"insert_slash\": true }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"(text.html, text.xml) - string - comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \".*<$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_close_tags\" }\n\t\t]\n\t}\n]\n",
					"file": "/home/jyoo/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
					"file_size": -1,
					"file_write_time": -1,
					"settings":
					{
						"buffer_size": 36983,
						"line_ending": "Unix",
						"read_only": true,
						"scratch": true
					}
				},
				{
					"file": "/home/jyoo/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
					"settings":
					{
						"buffer_size": 444,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"terminal",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"md",
						"Markdown Preview: Preview in Browser"
					],
					[
						"termi",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"Mark",
						"Markdown Preview: Preview in Browser"
					],
					[
						"mark",
						"Markdown Preview: Preview in Browser"
					],
					[
						"live",
						"LiveReload: Enable/disable plug-ins"
					],
					[
						"ter",
						"Terminus: Open Default Shell in Tab (View)"
					],
					[
						"terminus",
						"Terminus: Open Default Shell in Tab (View)"
					],
					[
						"pack",
						"Package Control: Install Package"
					],
					[
						"Package Control: remove",
						"Package Control: Remove Package"
					],
					[
						"termin",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"terminus: ",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"install pa",
						"Package Control: Install Package"
					],
					[
						"install package",
						"Package Control: Install Package"
					],
					[
						"git:status",
						"Git: Status"
					],
					[
						"SublimeGit",
						"Set Syntax: SublimeGit Status"
					],
					[
						"Install Package Control",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/console/console.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/console/console.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_status_helper.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/include/tncInterface.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/moc_qt_status_helper.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/mm/app/mmModbus/communicationHandler.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/computedDataFromMm.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/common/includes/tncInterfaceCommon.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/gui.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/main.qrc",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/EngineeringPanel.qml",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/main.qml",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qt_command_helper.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/main_eng.qml",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/configuration/tncConfig.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/assets/icon_pressure_selected.svg",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/assets/icon_pressure_disabled.svg",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/gui/qml/assets/icon_pressure_normal.svg",
				"/home/jyoo/bitbucket/ima-generator/README.md",
				"/home/jyoo/.bashrc",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/proxyStub/rtmProxyStub.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/processedDataFromRtm.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/rtmAppStatusData.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/measuredDataFromRtm.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/logData.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/operatingData.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/modbusUploadRtmParams.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/report/csv.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/include/tncMessages.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/tools/convertBinToCsv/convertBinToCsv.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/api/api.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/status/status.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/include/tncInterfaceInputParser.h",
				"/home/jyoo/bitbucket/ima-generator/software/tnc/backend/messages/tnc.pb.h",
				"/home/jyoo/bitbucket/ima-generator/.gitignore",
				"/home/jyoo/github/protobuf/cmake/libprotobuf.cmake",
				"/media/jyoo/YOO/tncConfig.inp",
				"/home/jyoo/Documents/tncConfig.inp",
				"/home/jyoo/Documents/temp.cpp",
				"/home/jyoo/bitbucket/ima-generator-tools/3rd-party/qt/README.md",
				"/home/jyoo/github/udacity/cpp/notes/references_and_pointers.md",
				"/home/jyoo/github/udacity/cpp/notes/data_structure.md",
				"/home/jyoo/github/udacity/cpp/notes/References and Pointers.md",
				"/home/jyoo/github/udacity/cpp/notes/build_system.md",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/test/rf_pwr_test.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_tx.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/dac_core.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_api.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_api.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_tx.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_rx.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/rf_pwr/rf_pwr_rx.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/adc_core.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/common_printf.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/ima_common.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/source/app.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/drv8711.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/ima_error.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_util.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_conv.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/ad9361/ad9361_util.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/source/platform.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/common/include/ima_assert.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/prototype/product/uCOS-II/sas/modbus/rtmModbusRtu.cpp",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/prototype/product/uCOS-II/sas/hala/rtmHalApi.cpp",
				"/home/jyoo/.config/sublime-text-3/Packages/User/SublimeGit.sublime-settings",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/drivers/spi.c",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/components/include/drv8711.h",
				"/home/jyoo/bitbucket/ima-generator/software/rtm/source/ima_assert_impl.c",
				"/home/jyoo/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
				"/home/jyoo/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap"
			],
			"find":
			{
				"height": 39.0
			},
			"find_in_files":
			{
				"height": 116.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"\"alt",
					"\"alt+o\""
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": true,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/jyoo/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 36983,
								"regions":
								{
								},
								"selection":
								[
									[
										279,
										430
									]
								],
								"settings":
								{
									"edit_settings_other_view_id": 215,
									"edit_settings_view": "base",
									"mini_diff": false,
									"syntax": "Packages/JavaScript/JSON.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						}
					]
				},
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 1,
							"file": "/home/jyoo/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 444,
								"regions":
								{
								},
								"selection":
								[
									[
										442,
										442
									]
								],
								"settings":
								{
									"edit_settings_other_view_id": 214,
									"edit_settings_view": "user",
									"syntax": "Packages/JavaScript/JSON.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 26.0
			},
			"input":
			{
				"height": 38.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					],
					[
						1,
						0,
						2,
						1
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.SublimeLinter":
			{
				"height": 0.0
			},
			"output.Terminus":
			{
				"height": 173.0
			},
			"output.Terminus 2":
			{
				"height": 306.0
			},
			"output.exec":
			{
				"height": 132.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.unsaved_changes":
			{
				"height": 132.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,117,27,1804,1410,5360,1440",
			"project": "",
			"replace":
			{
				"height": 48.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"gui/qt_status_helper.cpp"
					],
					[
						"qt",
						"gui/qt_status_helper.cpp"
					],
					[
						"drv8711",
						"components/include/drv8711.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 1,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 362.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 59,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/home/jyoo/workspace/rtm.sublime-workspace"
		]
	}
}
